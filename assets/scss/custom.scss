//Global vars
$sunburst-color1: darkorange;
$sunburst-color2: orange;
$text-color-primary: black;


@function do-background($color1, $color2, $deg) {
  $i: 180 - $deg;
  $bg: "";
  $current-color: $color1;

  @while $i >= 0 {
    $bg: $bg + 'linear-gradient(#{$i}deg, transparent 50%, #{$current-color} 50%, #{$current-color} 100%), ';
    $i:$i - $deg;

    $current-color : if($current-color == $color1, $color2, $color1);
  }

  $punultimate-idx: str_length($bg) - 2;

  @return unquote(str_slice($bg, 0, $punultimate-idx));
}


@mixin copy-type {
  font-family: 'Montserrat', sans-serif;
}

@mixin title-type {
  font-family: 'Fugaz One', cursive;
  color: $text-color-primary;
}

@keyframes spin {
  from {
    transform: translate(-50%, -50%) rotate(0deg);
  }

  to {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

html {
  @include copy-type;
}

html, body {
  height: 100%;
  margin: 0;
  padding: 0;
  width: 100%;
}

.pad-0 {
  padding: 0;
}

h1, h2, h3 {
  @include title-type;
}

.sunburst.outer {
  height: 100%;
  overflow: hidden;
  position: absolute;
  width: 100%;

  .inner {
    animation: spin 45s linear infinite paused;
    height: 300%;
    left: 50%;
    position: absolute;
    top: 44%;
    transform: translate(-50%, -50%);
    width: 300%;

    &.animated {
      animation-play-state: running;
    }

    .gradient-wrap {
      height: 50%;
      overflow: hidden;
      width: 100%;

      &:last-child {
        transform: rotate(180deg);
      }
    }

    .gradient {
      background: do-background($sunburst-color1, $sunburst-color2, 10);
      height: 200%;
      width: 100%;
    }
  }
}

.starburst {
  align-items: center;
  display: flex;
  justify-content: center;
  text-align: center;

  ::before,
  ::after {
    background: inherit;
    content: "";
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
    z-index: -1;
  }

  ::before {
    transform: rotate(30deg);
  }

  ::after {
    transform: rotate(-30deg);
  }
}